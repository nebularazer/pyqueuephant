[tool.poetry]
name = "pyqueuephant"
version = "0.1.0"
description = "A async task queue based on postgresql"
authors = ["nebularazer <nebularazer@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
asyncpg = "^0.27.0"


[tool.poetry.group.dev.dependencies]
black = "^23.1.0"
flake8 = "^6.0.0"
isort = "^5.12.0"
mypy = "^1.0.1"
pydocstyle = {extras = ["toml"], version = "^6.3.0"}


[tool.poetry.group.test.dependencies]
pytest = "^7.2.2"
coverage = {extras = ["toml"], version = "^7.2.1"}
pytest-cov = "^4.0.0"

[tool.mypy]
python_version = "3.11"
ignore_missing_imports = true
disallow_untyped_defs = true
warn_unused_ignores = true
no_implicit_optional = true
plugins = []

[tool.pydocstyle]
convention="google"
add_ignore=[
  "D100",
  "D101",
  "D102",
  "D103",
  "D104",
  "D105",
  "D106",
  "D107",
]
match_dir="pyqueuephant/.*"

[tool.black]
line-length = 88
target-version = ["py311"]
include = '\.pyi?$'

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
force_single_line = true
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88

[tool.coverage.paths]
source = ["pyqueuephant"]

[tool.coverage.run]
branch = true
source = ["pyqueuephant"]
omit = []

[tool.coverage.report]
show_missing = true
exclude_lines = [
  'if TYPE_CHECKING:',
  'def __repr__',
  'raise AssertionError',
  'raise NotImplementedError',
  'if __name__ == .__main__.:',
  'pragma: no cover',
]

[tool.pytest.ini_options]
addopts = "--cov --cov-report xml"
log_cli = true
log_cli_level = "INFO"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
